/*! angular-flash - v2.2.0 - 2016-02-10
* https://github.com/sachinchoolur/angular-flash
* Copyright (c) 2016 Sachin; Licensed MIT */
"use strict";
var app = angular.module("ngFlash", []);
app.run(["$rootScope", function(a) {
    return a.flashes = []
}]), app.directive("dynamic", ["$compile", function(a) {
    return {
        restrict: "A", replace: !0, link: function(b, c, d) {
            return b.$watch(d.dynamic, function(d) {
                return c.html(d), a(c.contents())(b)
            })
        }
    }
}]), app.directive("closeFlash", ["$compile", "$rootScope", "Flash", function(a, b, c) {
    return {
        link: function(a, d, e) {
            return d.on("click", function() {
                var a = parseInt(e.closeFlash, 10);
                c.dismiss(a), b.$apply()
            })
        }
    }
}]), app.directive("flashMessage", ["Flash", function(a) {
    return {
        restrict: "E",
        scope: {duration: "=", showClose: "=", onDismiss: "&"},
        template: '<div ng-show="$root.flashes.length > 0"><div role="alert" ng-repeat="flash in $root.flashes track by $index" id="{{flash.config.id}}" class="alert {{flash.config.class}} alert-{{flash.type}} alert-dismissible alertIn alertOut"><div type="button" class="close" ng-show="flash.showClose" close-flash="{{flash.id}}"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></div> <span dynamic="flash.text"></span> </div></div>',
        link: function(b, c, d) {
            function e(a) {
                "function" == typeof b.onDismiss && b.onDismiss({flash: a})
            }

            a.setDefaultTimeout(b.duration), a.setShowClose(b.showClose), a.setOnDismiss(e)
        }
    }
}]), app.factory("Flash", ["$rootScope", "$timeout", function(a, b) {
    function c(b) {
        return a.flashes.findIndex(function(a) {
            return a.id === b
        })
    }

    var d = {}, e = 0;
    return d.setDefaultTimeout = function(a) {
        "number" == typeof a && (d.defaultTimeout = a)
    }, d.defaultShowClose = !0, d.setShowClose = function(a) {
        "boolean" == typeof a && (d.defaultShowClose = a)
    }, d.setOnDismiss = function(a) {
        "function" == typeof a && (d.onDismiss = a)
    }, d.create = function(c, f, g, h, i) {
        var j = void 0, k = void 0;
        return j = this, k = {
            type: c,
            text: f,
            config: h,
            id: e++
        }, k.showClose = "undefined" != typeof i ? i : d.defaultShowClose, d.defaultTimeout && "undefined" == typeof g ? k.timeout = d.defaultTimeout : g && (k.timeout = g), a.flashes.push(k), k.timeout && (k.timeoutObj = b(function(a) {
            j.dismiss(a)
        }, k.timeout, !0, k.id)), k.id
    }, d.pause = function(c) {
        a.flashes[c].timeoutObj && b.cancel(a.flashes[c].timeoutObj)
    }, d.dismiss = function(b) {
        var e = c(b);
        if (-1 !== e) {
            var f = a.flashes[e];
            d.pause(e), a.flashes.splice(e, 1), a.$digest(), "function" == typeof d.onDismiss && d.onDismiss(f)
        }
    }, d.clear = function() {
        for (; a.flashes.length > 0;)d.dismiss(a.flashes[0].id)
    }, d.reset = d.clear, d
}]);
